{"version":3,"sources":["components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Profile/Profileinfo/ProfileStatus.jsx","components/Profile/Profileinfo/ProfileStatusWithHooksy.jsx","components/Profile/Profileinfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatus","ProfileStatusWithHoooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","descriptionBlock","src","photos","large","userPhoto","alt","fullName","aboutMe","contacts","facebook","vk","youtube","twitter","instagram","lookingForAJob","Preloader","Posts","width","height","question","message","likesCount","MyPosts","memo","postsElements","posts","reverse","map","p","H1Post","MyPostsReduxForm","onSubmit","addPost","newPost","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","textarea","button","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","componentDidMount","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getStatus","render","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.b1006e62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgUp\":\"ProfileInfo_imgUp__3jSIG\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__VPVPJ\",\"status\":\"ProfileInfo_status__3v7sO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPosts\":\"MyPosts_MyPosts__1IHXH\",\"H1Post\":\"MyPosts_H1Post__vVIqV\",\"textarea\":\"MyPosts_textarea__2NKTA\",\"button\":\"MyPosts_button__1o0yv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__34Nsy\",\"question\":\"Posts_question__1re_s\"};","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactiveEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.status !== this.props.status)\r\n        this.setState({\r\n            status:this.props.status\r\n        })\r\n\r\n        console.log('componentDidUpdate');\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {!this.state.editMode &&\r\n                        <div>\r\n                            <span className={s.status} onDoubleClick={this.activeEditMode}>{this.props.status || '-------'}</span>\r\n                        </div>\r\n                    }\r\n                    {this.state.editMode &&\r\n                        <div>\r\n                            <input className={s.status} onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactiveEditMode} value={this.state.status} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileStatusWithHoooks = (props) => {\r\n     \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n    \r\n\r\n    const activeEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n   const deactiveEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n   const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {!editMode &&\r\n                        <div>\r\n                            <span className={s.status} onDoubleClick={activeEditMode} >{props.status || '-------'} </span>\r\n                        </div>\r\n                    }\r\n                    {editMode &&\r\n                        <div>\r\n                            <input className={s.status}  autoFocus={true} onBlur={deactiveEditMode} onChange={onStatusChange} value={status}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\nexport default ProfileStatusWithHoooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHoooks from './ProfileStatusWithHooksy';\r\n\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img className={s.imgUp} src='https://www.synsoftglobal.com/wp-content/uploads/2019/01/reactJS-linkedin.png' />\r\n      </div> */}\r\n\r\n      <div className={s.descriptionBlock}>\r\n\r\n        <img src={profile.photos.large != null ? profile.photos.large : userPhoto} alt=\"\" className={s.userPhoto} />\r\n\r\n        <div>{profile.fullName}</div>\r\n        <div>{profile.aboutMe}</div>\r\n        <div>{profile.contacts.facebook}</div>\r\n        <div>{profile.contacts.vk}</div>\r\n        <div>{profile.contacts.youtube = 'null'}</div>\r\n        <div>{profile.contacts.twitter}</div>\r\n        <div>{profile.contacts.instagram}</div>\r\n        <div>{profile.lookingForAJob = 'true'}</div>\r\n\r\n      </div>\r\n      <ProfileStatusWithHoooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from'./Posts.module.css';\r\n\r\n\r\nconst Posts = (props) => {\r\n    return ( \r\n    <div className={s.Posts}>\r\n      <img src=\"https://i.pinimg.com/originals/19/43/18/19431859261e12c5ba63da8f57b776ee.jpg\" width=\"70px\" height=\"70px\" />\r\n      \r\n\r\n        <div className={s.question}>\r\n          {props.message}\r\n          <br />\r\n          <span>Like</span> {props.likesCount}\r\n        </div>\r\n   \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Posts from './Post/Posts';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../until/validation/validation';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map(p => <Posts message={p.message} likesCount={p.likesCount} />);\r\n\r\n\r\n  let AddPost = (value) => {\r\n    props.addPost(value.newPost);\r\n  }\r\n\r\n  return (\r\n    <div className={s.MyPosts}>\r\n      <h1 className={s.H1Post}>My posts</h1>\r\n      <MyPostsReduxForm onSubmit={AddPost} />\r\n      {postsElements}\r\n    </div>\r\n  )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.form}>\r\n      <div><Field placeholder=\"Your Text\" name=\"newPost\" component={Textarea}\r\n        validate={[required, maxLength10]} className={s.textarea} /></div>\r\n      <div><button className={s.button}>Post</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({ form: 'MyPosts' })(MyPostsForm)\r\n\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPost) => {\r\n      dispatch(addPostActionCreator(newPost));\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './Profileinfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n \r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../Redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile}\r\n      status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile,getStatus,updateStatus}),\r\n  withRouter,\r\n  \r\n)(ProfileContainer);\r\n\r\n\r\n"],"sourceRoot":""}